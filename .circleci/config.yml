version: 2.1

commands:
  init-app-dependencies:
    steps:
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "app/yarn.lock" }}
      - run:
          name: Install Dependencies
          command: |
            cd app
            yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "app/yarn.lock" }}
          paths:
            - ~/.cache/yarn

jobs:
  app:
    parameters:
      node_version:
        type: string
    docker:
      - image: circleci/node:<< parameters.node_version >>
    steps:
      - checkout
      - init-app-dependencies
      - run:
          name: Run app/ui tests
          command: |
            cd app/ui
            yarn test
            # yarn build // removed, it takes too much time
      - run:
          name: Run app/server tests
          command: |
            cd app/server
            yarn test
  client-python:
    docker:
      - image: circleci/python:3.8-buster
    steps:
      - checkout
      - run:
          name: Checks style consistency across sources.
          working_directory: client_python
          command: |
            pip install flake8 --user
            flake8 client_python.py --max-line-length 120
      - run:
          name: Checks compliance with Python docstring convention.
          working_directory: client_python
          command: |
            pip install pydocstyle --user
            pydocstyle client_python.py
  build-nightly-docker:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - restore_cache:
          keys:
            - docker-cache-v1-{{ checksum "app/Dockerfile"  }}
      - run:
          name: Early return if this build is from a forked repository
          command: |
            if [[ $CIRCLE_PROJECT_USERNAME != "bonitoo-io" ]]; then
              echo "Nothing to do for forked repositories, so marking this step successful"
              circleci step halt
            fi
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i ./caches/app.tar | true
      - run:
          name: Build Docker image
          command: |
            cd app/
            docker build --cache-from=app -t ghcr.io/bonitoo-io/iot-center-v2/iot-center:nightly .
      - run:
          name: Test Docker image
          command: |
            docker run \
              --name influxdb_v2 \
              --detach \
              --rm \
              --env DOCKER_INFLUXDB_INIT_MODE=setup \
              --env DOCKER_INFLUXDB_INIT_USERNAME=my-user \
              --env DOCKER_INFLUXDB_INIT_PASSWORD=my-password \
              --env DOCKER_INFLUXDB_INIT_ORG=my-org \
              --env DOCKER_INFLUXDB_INIT_BUCKET=iot_center \
              --env DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-token \
              --publish 8086:8086 \
              influxdb:latest
            docker run \
              --name iot-center \
              --detach \
              --link influxdb_v2 \
              --env INFLUX_URL=http://influxdb_v2:8086 \
              --env INFLUX_TOKEN=my-token \
              --env INFLUX_ORG=my-org \
              --publish 5000:5000 \
              ghcr.io/bonitoo-io/iot-center-v2/iot-center:nightly
            docker run \
              --rm \
              --link iot-center \
              inutano/wget:1.20.3-r1 wget -S --spider --tries=25 --retry-connrefused --waitretry=5 http://iot-center:5000/
      - run:
          name: Stop iot-center container
          command: docker stop iot-center || true
          when: always
      - run:
          name: Print Docker output logs
          command: docker logs iot-center
          when: on_fail
      - run:
          name: Remove iot-center container
          command: docker rm iot-center || true
          when: always
      - run:
          name: Save Docker image Cache
          command: |
            mkdir -p ./caches
            docker save -o ./caches/app.tar ghcr.io/bonitoo-io/iot-center-v2/iot-center:nightly
      - persist_to_workspace:
          root: ./caches
          paths:
            - ./app.tar
      - save_cache:
          key: docker-cache-v1-{{ checksum "app/Dockerfile"  }}-{{ epoch }}
          paths:
            - ./caches/app.tar
  release-nightly-docker:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Early return if this build is from a forked repository
          command: |
            if [[ $CIRCLE_PROJECT_USERNAME != "bonitoo-io" ]]; then
              echo "Nothing to do for forked repositories, so marking this step successful"
              circleci step halt
            fi
      - attach_workspace:
          at: ./caches
      - run:
          name: Load Docker image from workspace cache
          command: |
            docker load -i ./caches/app.tar
      - run:
          name: Push Docker image
          command: |
            cd app/
            echo $GITHUB_TOKEN | docker login https://ghcr.io -u $GITHUB_ACTOR --password-stdin
            docker push ghcr.io/bonitoo-io/iot-center-v2/iot-center:nightly

workflows:
  build:
    jobs:
      - app:
          node_version: "12"
      - client-python
      - build-nightly-docker:
          filters:
            branches:
              only: master
      - release-nightly-docker:
          requires:
            - app
            - client-python
            - build-nightly-docker
          filters:
            branches:
              only: master
